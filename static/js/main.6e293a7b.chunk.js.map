{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","searchTitle","setSearchTitle","foundMovie","setFoundMovie","error","setError","handleFind","a","fetch","then","response","json","Response","Title","Plot","Poster","imdbID","useEffect","onSubmit","event","preventDefault","htmlFor","type","id","value","placeholder","classNames","onChange","target","trimLeft","onClick","App","data","setMovies","find","item","ReactDOM","render","document","getElementById"],"mappings":"mxEAIaA,G,kBAAY,SAAC,GAAD,IACvBC,EADuB,EACvBA,MADuB,IAEvBC,mBAFuB,MAET,GAFS,EAGvBC,EAHuB,EAGvBA,OACAC,EAJuB,EAIvBA,QAJuB,OAMvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aC/BKK,EAAa,SAAC,GAAD,QACxBC,cADwB,MACf,GADe,SAGxB,yBAAKL,UAAU,UACZK,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,S,wDCF3BG,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACHC,mBAAS,IADN,mBAClCC,EADkC,KACrBC,EADqB,OAELF,mBAASP,EAAO,IAFX,mBAElCU,EAFkC,KAEtBC,EAFsB,OAGfJ,oBAAS,GAHM,mBAGlCK,EAHkC,KAG3BC,EAH2B,KAKnCC,EAAU,uCAAG,4BAAAC,EAAA,sECZYxB,EDaWiB,ECZnCQ,MAAM,GAAD,OAHE,4CAGF,YAAezB,IACxB0B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDUV,UAGS,WAFpBD,EADW,QAGJE,SAHI,uBAIfP,GAAS,GAJM,0BASjBF,EAAc,CACZpB,MAAO2B,EAASG,MAChB7B,YAAa0B,EAASI,KACtB7B,OAAQyB,EAASK,OACjB7B,QAAQ,8BAAD,OAAgCwB,EAASM,OAAzC,KACPpB,OAAQc,EAASM,SAdF,iCCZd,IAA0BjC,IDYZ,OAAH,qDAsBhB,OAJAkC,qBAAU,WACRZ,GAAS,KACR,CAACL,IAGF,oCACE,0BACEb,UAAU,aACV+B,SAAU,SAACC,GACTA,EAAMC,iBACNd,EAAWN,KAGb,yBAAKb,UAAU,SACb,2BAAOA,UAAU,QAAQkC,QAAQ,eAAjC,eAIA,yBAAKlC,UAAU,WACb,2BACEmC,KAAK,OACLC,GAAG,cACHC,MAAOxB,EACPyB,YAAY,0BACZtC,UAAWuC,IAAW,QAAS,CAAE,YAAatB,IAC9CuB,SAAU,SAACR,GACTlB,EAAekB,EAAMS,OAAOJ,MAAMK,gBAIvCzB,GACC,uBAAGjB,UAAU,kBAAb,yCAMJ,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,WACb,4BACEmC,KAAK,SACLnC,UAAU,kBACV2C,QAASxB,GAHX,iBASF,yBAAKnB,UAAU,WACb,4BACEmC,KAAK,SACLnC,UAAU,oBACV2C,QAAS,WACPhC,EAASI,GACTD,EAAe,MALnB,sBAcN,yBAAKd,UAAU,aACb,wBAAIA,UAAU,SAAd,WACA,kBAAC,EAAce,ME3FV6B,EAAM,WAAO,IAAD,EACKhC,mBAASiC,GADd,mBAChBxC,EADgB,KACRyC,EADQ,KAUvB,OACE,oCACE,yBAAK9C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CACEK,OAAQA,KAGZ,yBAAKL,UAAU,WACb,kBAAC,EAAD,CACEW,SAlBO,SAACI,GACZV,EAAO0C,MAAK,SAAAC,GAAI,OAAIA,EAAKvC,SAAWM,EAAWN,WAInDqC,EAAU,GAAD,mBAAKzC,GAAL,CAAaU,YCR1BkC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6e293a7b.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './FindMovie.scss';\nimport { getMoviesByTitle } from '../../api';\nimport movies from '../../api/movies.json';\n\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [searchTitle, setSearchTitle] = useState('');\n  const [foundMovie, setFoundMovie] = useState(movies[0]);\n  const [error, setError] = useState(false);\n\n  const handleFind = async() => {\n    const response = await getMoviesByTitle(searchTitle);\n\n    if (response.Response === 'False') {\n      setError(true);\n\n      return;\n    }\n\n    setFoundMovie({\n      title: response.Title,\n      description: response.Plot,\n      imgUrl: response.Poster,\n      imdbUrl: `https://www.imdb.com/title/${response.imdbID}/`,\n      imdbId: response.imdbID,\n    });\n  };\n\n  useEffect(() => {\n    setError(false);\n  }, [searchTitle]);\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          handleFind(searchTitle);\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={searchTitle}\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': error })}\n              onChange={(event) => {\n                setSearchTitle(event.target.value.trimLeft());\n              }}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={handleFind}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(foundMovie);\n                setSearchTitle('');\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard {...foundMovie} />\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","const API_URL = 'https://www.omdbapi.com/?apikey=8ad6cc4&t';\n\nexport function getMoviesByTitle(title) {\n  return fetch(`${API_URL}=${title}`)\n    .then(response => response.json());\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n  const addMovie = (foundMovie) => {\n    if (movies.find(item => item.imdbId === foundMovie.imdbId)) {\n      return;\n    }\n\n    setMovies([...movies, foundMovie]);\n  };\n\n  return (\n    <>\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList\n            movies={movies}\n          />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            addMovie={addMovie}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}